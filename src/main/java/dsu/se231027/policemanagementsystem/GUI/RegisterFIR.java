package dsu.se231027.policemanagementsystem.GUI;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.LineNumberReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author Hamza Nizamani
 */
public class RegisterFIR extends javax.swing.JFrame {
        String folder = "data";

    /**
     * Creates new form RegisterFIR
     */
    public RegisterFIR() {
        initComponents();
    }

    private boolean validateCNIC() {
        String cnic = TextCNIC.getText();
        String regex = "^[0-9]{5}-[0-9]{7}-[0-9]$";
        Pattern pattern = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);
        Matcher matcher = pattern.matcher(cnic);
        boolean matchFound = matcher.find();
        if(matchFound) {
          System.out.println("Match found");
          return true;
        } else {
          System.out.println("Match not found");
          return false;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Header = new javax.swing.JPanel();
        TitleText = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        ButtonCancel = new javax.swing.JButton();
        Body = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        TextName = new javax.swing.JTextField();
        TextCNIC = new javax.swing.JTextField();
        TextDateTimeIncident = new javax.swing.JTextField();
        ComboTypeOfIncident = new javax.swing.JComboBox<>();
        TextIncidentLocation = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextAreaIncidentDesc = new javax.swing.JTextArea();
        ButtonReset = new javax.swing.JButton();
        ButtonSave = new javax.swing.JButton();
        LabelCNICValidator = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        Header.setBackground(java.awt.SystemColor.controlHighlight);
        Header.setPreferredSize(new java.awt.Dimension(708, 50));

        TitleText.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        TitleText.setForeground(new java.awt.Color(10, 10, 10));
        TitleText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleText.setText("File FIR");

        jButton4.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jButton4.setForeground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        jButton4.setText("X");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        ButtonCancel.setText("Go Back");
        ButtonCancel.setNextFocusableComponent(TextName);
        ButtonCancel.setOpaque(true);
        ButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HeaderLayout = new javax.swing.GroupLayout(Header);
        Header.setLayout(HeaderLayout);
        HeaderLayout.setHorizontalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(ButtonCancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TitleText, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
                .addGap(43, 43, 43)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        HeaderLayout.setVerticalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ButtonCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(TitleText))
                .addGap(15, 15, 15))
        );

        Body.setBackground(java.awt.SystemColor.controlHighlight);

        TextName.setBorder(javax.swing.BorderFactory.createTitledBorder("Your Name"));
        TextName.setNextFocusableComponent(TextCNIC);
        TextName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextNameActionPerformed(evt);
            }
        });

        TextCNIC.setToolTipText("xxxxx-xxxxxxx-x");
        TextCNIC.setBorder(javax.swing.BorderFactory.createTitledBorder("Your CNIC"));
        TextCNIC.setNextFocusableComponent(TextDateTimeIncident);
        TextCNIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextCNICActionPerformed(evt);
            }
        });

        TextDateTimeIncident.setBorder(javax.swing.BorderFactory.createTitledBorder("Date and Time of Incident"));
        TextDateTimeIncident.setNextFocusableComponent(ComboTypeOfIncident);

        ComboTypeOfIncident.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Class A", "Class B", "Class C" }));
        ComboTypeOfIncident.setBorder(javax.swing.BorderFactory.createTitledBorder("Type of Incident"));
        ComboTypeOfIncident.setNextFocusableComponent(TextIncidentLocation);

        TextIncidentLocation.setBorder(javax.swing.BorderFactory.createTitledBorder("Incident Location"));
        TextIncidentLocation.setNextFocusableComponent(TextAreaIncidentDesc);

        TextAreaIncidentDesc.setColumns(10);
        TextAreaIncidentDesc.setLineWrap(true);
        TextAreaIncidentDesc.setRows(5);
        TextAreaIncidentDesc.setTabSize(5);
        TextAreaIncidentDesc.setBorder(javax.swing.BorderFactory.createTitledBorder("Incident Description"));
        TextAreaIncidentDesc.setNextFocusableComponent(ButtonReset);
        jScrollPane1.setViewportView(TextAreaIncidentDesc);

        ButtonReset.setBackground(new java.awt.Color(169, 78, 78));
        ButtonReset.setText("Reset");
        ButtonReset.setNextFocusableComponent(ButtonSave);
        ButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonResetActionPerformed(evt);
            }
        });

        ButtonSave.setBackground(new java.awt.Color(114, 160, 92));
        ButtonSave.setText("Save");
        ButtonSave.setNextFocusableComponent(ButtonCancel);
        ButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSaveActionPerformed(evt);
            }
        });

        LabelCNICValidator.setForeground(new java.awt.Color(204, 0, 0));
        LabelCNICValidator.setText(" ");
        LabelCNICValidator.setFocusable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextName, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextCNIC, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextDateTimeIncident, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboTypeOfIncident, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(LabelCNICValidator, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TextIncidentLocation)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextName, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextIncidentLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(LabelCNICValidator)
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(TextCNIC, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(TextDateTimeIncident, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboTypeOfIncident, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55))
        );

        javax.swing.GroupLayout BodyLayout = new javax.swing.GroupLayout(Body);
        Body.setLayout(BodyLayout);
        BodyLayout.setHorizontalGroup(
            BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BodyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        BodyLayout.setVerticalGroup(
            BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BodyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        dispose();
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void ButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonResetActionPerformed
        
        // Empties All Text Boxes
        TextName.setText("");
        TextCNIC.setText("");
        TextDateTimeIncident.setText("");
        TextIncidentLocation.setText("");
        ComboTypeOfIncident.setSelectedIndex(0);
        TextAreaIncidentDesc.setText("");
        //Resets Warnings
        LabelCNICValidator.setText(" ");
        
        
    }//GEN-LAST:event_ButtonResetActionPerformed

    private void ButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCancelActionPerformed

        dispose();
        new Dashboard().setVisible(true);
    }//GEN-LAST:event_ButtonCancelActionPerformed

    private void ButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSaveActionPerformed
        if(validateCNIC() && !TextAreaIncidentDesc.getText().isEmpty()) {
            LabelCNICValidator.setText(" ");
            JOptionPane.showMessageDialog(this, "Name: "+TextName.getText()+"\nCNIC: "+TextCNIC.getText()+"\nDate and Time of Incident: "+TextDateTimeIncident.getText()+"\nIncident Location: "+TextIncidentLocation.getText()+"\nType of Incident: "+ComboTypeOfIncident.getSelectedItem()+"\nIncident Description: "+TextAreaIncidentDesc.getText());
            SaveToFile();
        }
        else {
            LabelCNICValidator.setText("Invalid CNIC!");
            JOptionPane.showMessageDialog(this, "Invalid CNIC, Please Enter Correct CNIC Number", "CNIC Format Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ButtonSaveActionPerformed

    private void TextCNICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextCNICActionPerformed
        if(validateCNIC()) {
            LabelCNICValidator.setText(" ");
        }
        else {
            LabelCNICValidator.setText("Invalid CNIC!");
        }
    }//GEN-LAST:event_TextCNICActionPerformed

    private void TextNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterFIR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterFIR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterFIR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterFIR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterFIR().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Body;
    private javax.swing.JButton ButtonCancel;
    private javax.swing.JButton ButtonReset;
    private javax.swing.JButton ButtonSave;
    private javax.swing.JComboBox<String> ComboTypeOfIncident;
    private javax.swing.JPanel Header;
    private javax.swing.JLabel LabelCNICValidator;
    private javax.swing.JTextArea TextAreaIncidentDesc;
    private javax.swing.JTextField TextCNIC;
    private javax.swing.JTextField TextDateTimeIncident;
    private javax.swing.JTextField TextIncidentLocation;
    private javax.swing.JTextField TextName;
    private javax.swing.JLabel TitleText;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void SaveToFile() {

        if(checkFIR()) {
        File file = new File(folder + ".csv");
            System.out.println("DEBUG 1");
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, true)))
            
        {
            String FIRName = TextName.getText(); String FIRCnic = TextCNIC.getText();
            String FIRDate = TextDateTimeIncident.getText(); String FIRIncLoc = TextIncidentLocation.getText();
            String FIRDescription = TextAreaIncidentDesc.getText(); String FIRType = ComboTypeOfIncident.getSelectedItem().toString();
            long CaseNo = countLines() - 1;              
            writer.append("\n"+ CaseNo + "," + FIRName +","+ FIRCnic +","+ FIRType +","+ FIRDate +","+ FIRIncLoc +","+ FIRDescription);
            writer.close();
        }
        catch(IOException io)
        {
            Logger.getLogger(RegisterFIR.class.getName()).log(Level.SEVERE, null, io);
        }
        }
        else {
            System.out.println("Generating Default CSV File.");
            File file = new File(folder + ".csv");
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, true)))
            {
                writer.append("Case No,Name,CNIC,Type,Date of Incident, Location, Description");
                writer.close();
                SaveToFile();
            }
            catch (IOException ex) {
                Logger.getLogger(RegisterFIR.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private boolean checkFIR() {
        File f = new File(folder +".csv");
        return f.exists() && !f.isDirectory();
    }
    
    private long countLines() {
        String fileName = "data.csv";
        long noOfLines = -1;

        try(LineNumberReader lineNumberReader =
            new LineNumberReader(new FileReader(new File(fileName)))) {
            //Skip to last line
                lineNumberReader.skip(Long.MAX_VALUE);
                noOfLines = lineNumberReader.getLineNumber() + 1;
}           catch (IOException ex) {
                Logger.getLogger(RegisterFIR.class.getName()).log(Level.SEVERE, null, ex);
            }
            return noOfLines;
    }
}